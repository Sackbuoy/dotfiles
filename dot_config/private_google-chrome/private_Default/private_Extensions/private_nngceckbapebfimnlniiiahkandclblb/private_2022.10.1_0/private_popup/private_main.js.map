{"version":3,"file":"popup/main.js","mappings":"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T0/C,SAAU,GACV4kE,KAAM,CACJn4H,GACAi5D,GACAz8B,GACAsa,GACAtzC,GACAwzC,GACA1rD,GACAouB,GACA2Q,GACApqB,GACA1U,GACA,GACAwvC,GACAi+B,GACAv8B,GACA26B,KAGJ,CAAE7vE,QAAS86B,GAA+BkxC,SAAU,IACpD,CACEhsE,QAAS0xE,GACT1F,SAAU,GACV4kE,KAAM,CAAC,KAET,CACE5wI,QAASmc,GACT6vD,SAAU,GACV4kE,KAAM,CACJ30H,GACAwsD,GACAt2C,GACA,KAGJ,CACEnyB,QAASkc,GACT8vD,SAAU,GACV4kE,KAAM,CACJrhF,GACAta,GACAwa,GACAxzC,GACAxW,GACA1B,GACAumC,GACAtmC,GACA,GACAF,GACAqY,GACA2zD,GACAD,KAGJ,CACE7vE,QAAS,GACTgsE,SAAU,GACV4kE,KAAM,CACJh/D,GACAlC,GACAD,GACA/2D,GACAi5D,GACAhC,GACAC,KAGJ,CACE5vE,QAAS2xE,GACT3F,SAAU,GACV4kE,KAAM,CAACh/D,GAAwBlC,GAAgBC,KAEjD,CACE3vE,QAASywC,GACTu7B,SAAU,GACV4kE,KAAM,CACJ37F,GACAsa,GACA92C,GACAwD,GACAtB,KAGJ,CACE3a,QAASsqC,GACT0hC,SAAU,GACV4kE,KAAM,CAACrhF,GAA0B72C,GAAY3W,KAE/C,CACE/B,QAASwxE,GACTxF,SAAU,GACV4kE,KAAM,CACJtkH,GACAyM,GACAtgB,GACA/S,GACAmqE,GACAn3D,GACA,GACA5U,KAGJ,CACE9D,QAAS2a,GACTqxD,SAAUghE,GACV4D,KAAM,CAACphE,KAET,CACExvE,QAASoxE,GACTpF,SAAU+qC,GACV65B,KAAM,CAACj2H,GAAkCjC,GAAYu3D,KAEvD,CACEjwE,QAAS0wC,GACTs7B,SAAU,GACV4kE,KAAM,CACJn4H,GACA82C,GACA,GACA72C,GACA86B,KAGJ,CACExzC,QAASmyB,GACT65C,SAAU,GACV4kE,KAAM,CAAC,GAAyBp9F,KAElC,CACExzC,Q3b3aC,cAA6CmyB,K2b4a9CwX,YAAaxX,IAEf,CACEnyB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CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../libs/angular/src/components/toastr.component.ts","webpack:///../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack:///../../libs/common/src/abstractions/i18n.service.ts","webpack:///../../libs/angular/src/pipes/i18n.pipe.ts","webpack:///../../libs/angular/src/pipes/search.pipe.ts","webpack:///../../libs/angular/src/pipes/user-name.pipe.ts","webpack:///../../libs/angular/src/jslib.module.ts","webpack:///../../libs/common/src/enums/authenticationStatus.ts","webpack:///../../libs/common/src/abstractions/auth.service.ts","webpack:///../../libs/common/src/abstractions/messaging.service.ts","webpack:///../../libs/common/src/abstractions/keyConnector.service.ts","webpack:///../../libs/angular/src/guards/auth.guard.ts","webpack:///../../libs/angular/src/guards/lock.guard.ts","webpack:///../../libs/angular/src/guards/unauth.guard.ts","webpack:///../../libs/common/src/abstractions/platformUtils.service.ts","webpack:///../../libs/common/src/abstractions/environment.service.ts","webpack:///../../libs/angular/src/components/environment.component.ts","webpack:///../../libs/common/src/models/domain/environmentUrls.ts","webpack:///../../libs/common/src/services/environment.service.ts","webpack:///../../libs/common/src/enums/encryptionType.ts","webpack:///./src/services/browser-environment.service.ts","webpack:///../../libs/angular/src/directives/box-row.directive.ts","webpack:///../../libs/common/src/misc/utils.ts","webpack:///../../libs/common/src/models/domain/encString.ts","webpack:///../../libs/common/src/models/domain/domainBase.ts","webpack:///../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///../../libs/angular/src/components/callout.component.html","webpack:///../../libs/angular/src/components/callout.component.ts","webpack:///../../libs/angular/src/directives/input-verbatim.directive.ts","webpack:///../../libs/angular/src/directives/stop-click.directive.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./src/popup/accounts/environment.component.ts","webpack:///../../libs/common/src/models/request/passwordHintRequest.ts","webpack:///../../libs/common/src/abstractions/api.service.ts","webpack:///../../libs/common/src/abstractions/log.service.ts","webpack:///../../libs/angular/src/services/validation.service.ts","webpack:///../../libs/angular/src/directives/api-action.directive.ts","webpack:///../../libs/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///../../libs/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack:///../../libs/common/src/abstractions/state.service.ts","webpack:///../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///../../libs/common/src/enums/hashPurpose.ts","webpack:///../../libs/common/src/enums/keySuffixOptions.ts","webpack:///../../libs/common/src/models/request/secretVerificationRequest.ts","webpack:///../../libs/common/src/abstractions/crypto.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack:///../../libs/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///../../libs/angular/src/directives/a11y-title.directive.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///../../libs/common/src/enums/authenticationType.ts","webpack:///../../libs/common/src/models/domain/logInCredentials.ts","webpack:///../../libs/common/src/misc/captcha_iframe.ts","webpack:///../../libs/common/src/misc/iframe_component.ts","webpack:///../../libs/angular/src/components/captchaProtected.component.ts","webpack:///../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack:///../../libs/angular/src/components/login.component.ts","webpack:///../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///./src/popup/accounts/login.component.ts","webpack:///../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack:///../../libs/common/src/enums/kdfType.ts","webpack:///../../libs/common/src/models/request/keysRequest.ts","webpack:///../../libs/common/src/models/request/registerRequest.ts","webpack:///../../libs/angular/src/components/register.component.ts","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///../../libs/common/src/models/request/setPasswordRequest.ts","webpack:///../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack:///../../libs/angular/src/components/change-password.component.ts","webpack:///../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///../../libs/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///../../libs/common/src/abstractions/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///../../libs/common/src/enums/twoFactorProviderType.ts","webpack:///../../libs/common/src/misc/webauthn_iframe.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack:///../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack:///../../libs/common/src/services/twoFactor.service.ts","webpack:///../../libs/common/src/abstractions/appId.service.ts","webpack:///../../libs/angular/src/components/two-factor.component.ts","webpack:///../../libs/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///../../libs/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack:///../../libs/angular/src/components/generator.component.ts","webpack:///../../libs/angular/src/directives/select-copy.directive.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///../../libs/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///../../libs/common/src/enums/policyType.ts","webpack:///../../libs/common/src/enums/sendType.ts","webpack:///../../libs/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///../../libs/common/src/models/view/sendFileView.ts","webpack:///../../libs/common/src/models/view/sendTextView.ts","webpack:///../../libs/common/src/models/view/sendView.ts","webpack:///../../libs/common/src/abstractions/send.service.ts","webpack:///../../libs/angular/src/components/send/efflux-dates.component.ts","webpack:///../../libs/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///../../libs/common/src/abstractions/search.service.ts","webpack:///../../libs/angular/src/components/send/send.component.ts","webpack:///../../libs/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///../../libs/common/src/enums/encryptedExportType.ts","webpack:///../../libs/common/src/enums/eventType.ts","webpack:///../../libs/common/src/abstractions/export.service.ts","webpack:///../../libs/common/src/abstractions/event.service.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack:///../../libs/angular/src/components/export.component.ts","webpack:///../../libs/common/src/abstractions/organization.service.ts","webpack:///../../libs/common/src/enums/verificationType.ts","webpack:///../../libs/angular/src/components/export-scope-callout.component.html","webpack:///../../libs/angular/src/components/export-scope-callout.component.ts","webpack:///../../libs/angular/src/components/user-verification.component.html","webpack:///../../libs/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///../../libs/common/src/models/view/folderView.ts","webpack:///../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///../../libs/common/src/enums/themeType.ts","webpack:///../../libs/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///../../libs/common/src/abstractions/totp.service.ts","webpack:///../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///../../libs/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///../../libs/angular/src/components/modal/modal.ref.ts","webpack:///../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack:///../../libs/angular/src/components/modal/modal-injector.ts","webpack:///../../libs/common/src/enums/deviceType.ts","webpack:///../../libs/angular/src/services/modal.service.ts","webpack:///../../libs/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack:///./src/popup/settings/about.component.html","webpack:///./src/popup/settings/about.component.ts","webpack:///../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///../../libs/common/src/enums/cipherRepromptType.ts","webpack:///../../libs/common/src/enums/cipherType.ts","webpack:///../../libs/common/src/enums/organizationUserStatusType.ts","webpack:///../../libs/common/src/enums/secureNoteType.ts","webpack:///../../libs/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack:///../../libs/common/src/models/view/itemView.ts","webpack:///../../libs/common/src/models/view/cardView.ts","webpack:///../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack:///../../libs/common/src/models/view/attachmentView.ts","webpack:///../../libs/common/src/models/view/fieldView.ts","webpack:///../../libs/common/src/models/view/identityView.ts","webpack:///../../libs/common/src/models/view/loginUriView.ts","webpack:///../../libs/common/src/models/view/loginView.ts","webpack:///../../libs/common/src/models/view/passwordHistoryView.ts","webpack:///../../libs/common/src/models/view/secureNoteView.ts","webpack:///../../libs/common/src/models/view/cipherView.ts","webpack:///../../libs/common/src/abstractions/cipher.service.ts","webpack:///../../libs/common/src/abstractions/audit.service.ts","webpack:///../../libs/common/src/abstractions/collection.service.ts","webpack:///../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack:///../../libs/common/src/enums/fieldType.ts","webpack:///../../libs/angular/src/components/add-edit.component.ts","webpack:///../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack:///../../libs/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///../../libs/common/src/models/domain/encArrayBuffer.ts","webpack:///../../libs/common/src/models/response/baseResponse.ts","webpack:///../../libs/common/src/models/response/errorResponse.ts","webpack:///../../libs/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///../../libs/angular/src/components/ciphers.component.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack:///../../libs/common/src/models/domain/treeNode.ts","webpack:///../../libs/common/src/misc/serviceUtils.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack:///../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///../../libs/angular/src/directives/fallback-src.directive.ts","webpack:///../../libs/angular/src/components/icon.component.html","webpack:///../../libs/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///../../libs/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///../../libs/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///../../libs/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///../../libs/common/src/abstractions/token.service.ts","webpack:///../../libs/angular/src/components/view.component.ts","webpack:///../../libs/angular/src/components/view-custom-fields.component.ts","webpack:///../../libs/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./src/popup/app.component.ts","webpack:///../../libs/angular/src/services/injection-tokens.ts","webpack:///../../libs/angular/src/services/theming/themeBuilder.ts","webpack:///../../libs/common/src/enums/stateVersion.ts","webpack:///../../libs/angular/src/services/theming/theming.service.ts","webpack:///../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack:///../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/fileUpload.service.ts","webpack:///../../libs/common/src/abstractions/notifications.service.ts","webpack:///../../libs/common/src/abstractions/provider.service.ts","webpack:///../../libs/common/src/abstractions/settings.service.ts","webpack:///../../libs/common/src/abstractions/stateMigration.service.ts","webpack:///../../libs/common/src/abstractions/storage.service.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack:///../../libs/common/src/factories/accountFactory.ts","webpack:///../../libs/common/src/factories/globalStateFactory.ts","webpack:///../../libs/common/src/factories/stateFactory.ts","webpack:///../../libs/common/src/models/data/server-config.data.ts","webpack:///../../libs/common/src/models/domain/account.ts","webpack:///../../libs/common/src/models/domain/windowState.ts","webpack:///../../libs/common/src/models/domain/globalState.ts","webpack:///../../libs/common/src/enums/notificationType.ts","webpack:///../../libs/common/src/models/response/notificationResponse.ts","webpack:///../../libs/common/src/services/anonymousHub.service.ts","webpack:///../../libs/common/src/models/request/deviceRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///../../libs/common/src/models/response/apiKeyResponse.ts","webpack:///../../libs/common/src/models/response/attachmentResponse.ts","webpack:///../../libs/common/src/models/api/cardApi.ts","webpack:///../../libs/common/src/models/api/fieldApi.ts","webpack:///../../libs/common/src/models/api/identityApi.ts","webpack:///../../libs/common/src/models/api/loginUriApi.ts","webpack:///../../libs/common/src/models/api/loginApi.ts","webpack:///../../libs/common/src/models/api/secureNoteApi.ts","webpack:///../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack:///../../libs/common/src/models/response/cipherResponse.ts","webpack:///../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/authRequestResponse.ts","webpack:///../../libs/common/src/models/response/authentication/registerResponse.ts","webpack:///../../libs/common/src/models/response/billingResponse.ts","webpack:///../../libs/common/src/models/response/billingHistoryResponse.ts","webpack:///../../libs/common/src/models/response/billingPaymentResponse.ts","webpack:///../../libs/common/src/models/response/breachAccountResponse.ts","webpack:///../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///../../libs/common/src/models/response/collectionResponse.ts","webpack:///../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack:///../../libs/common/src/models/response/globalDomainResponse.ts","webpack:///../../libs/common/src/models/response/domainsResponse.ts","webpack:///../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack:///../../libs/common/src/models/response/eventResponse.ts","webpack:///../../libs/common/src/models/response/groupResponse.ts","webpack:///../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack:///../../libs/common/src/models/response/identityTokenResponse.ts","webpack:///../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack:///../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///../../libs/common/src/models/response/listResponse.ts","webpack:///../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack:///../../libs/common/src/models/response/organizationExportResponse.ts","webpack:///../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack:///../../libs/common/src/models/api/permissionsApi.ts","webpack:///../../libs/common/src/models/response/organizationUserResponse.ts","webpack:///../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderResponse.ts","webpack:///../../libs/common/src/models/response/profileResponse.ts","webpack:///../../libs/common/src/models/response/paymentResponse.ts","webpack:///../../libs/common/src/models/response/planResponse.ts","webpack:///../../libs/common/src/models/response/policyResponse.ts","webpack:///../../libs/common/src/models/response/preloginResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack:///../../libs/common/src/models/api/sendFileApi.ts","webpack:///../../libs/common/src/models/api/sendTextApi.ts","webpack:///../../libs/common/src/models/response/sendAccessResponse.ts","webpack:///../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///../../libs/common/src/models/response/sendResponse.ts","webpack:///../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack:///../../libs/common/src/models/response/subscriptionResponse.ts","webpack:///../../libs/common/src/models/response/folderResponse.ts","webpack:///../../libs/common/src/models/response/syncResponse.ts","webpack:///../../libs/common/src/models/response/taxInfoResponse.ts","webpack:///../../libs/common/src/models/response/taxRateResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///../../libs/common/src/models/response/userKeyResponse.ts","webpack:///../../libs/common/src/enums/htmlStorageLocation.ts","webpack:///../../libs/common/src/services/api.service.ts","webpack:///../../libs/common/src/services/appId.service.ts","webpack:///../../libs/common/src/services/audit.service.ts","webpack:///../../libs/common/src/misc/throttle.ts","webpack:///../../libs/common/src/models/domain/authResult.ts","webpack:///../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///../../libs/common/src/models/request/preloginRequest.ts","webpack:///../../libs/common/src/services/auth.service.ts","webpack:///../../libs/common/src/misc/sequentialize.ts","webpack:///../../libs/common/src/models/data/attachmentData.ts","webpack:///../../libs/common/src/models/data/cardData.ts","webpack:///../../libs/common/src/models/data/fieldData.ts","webpack:///../../libs/common/src/models/data/identityData.ts","webpack:///../../libs/common/src/models/data/loginUriData.ts","webpack:///../../libs/common/src/models/data/loginData.ts","webpack:///../../libs/common/src/models/data/passwordHistoryData.ts","webpack:///../../libs/common/src/models/data/secureNoteData.ts","webpack:///../../libs/common/src/models/data/cipherData.ts","webpack:///../../libs/common/src/models/domain/attachment.ts","webpack:///../../libs/common/src/models/domain/card.ts","webpack:///../../libs/common/src/models/domain/field.ts","webpack:///../../libs/common/src/models/domain/identity.ts","webpack:///../../libs/common/src/models/domain/loginUri.ts","webpack:///../../libs/common/src/models/domain/login.ts","webpack:///../../libs/common/src/models/domain/password.ts","webpack:///../../libs/common/src/models/domain/secureNote.ts","webpack:///../../libs/common/src/models/domain/cipher.ts","webpack:///../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack:///../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///../../libs/common/src/models/request/attachmentRequest.ts","webpack:///../../libs/common/src/models/request/cipherRequest.ts","webpack:///../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack:///../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack:///../../libs/common/src/models/request/cipherCreateRequest.ts","webpack:///../../libs/common/src/models/request/cipherShareRequest.ts","webpack:///../../libs/common/src/services/cipher.service.ts","webpack:///../../libs/common/src/models/data/collectionData.ts","webpack:///../../libs/common/src/models/view/collectionView.ts","webpack:///../../libs/common/src/models/domain/collection.ts","webpack:///../../libs/common/src/services/collection.service.ts","webpack:///../../libs/common/src/models/response/server-config-response.ts","webpack:///../../libs/common/src/abstractions/config/server-config.ts","webpack:///../../libs/common/src/enums/logLevelType.ts","webpack:///../../libs/common/src/services/consoleLog.service.ts","webpack:///../../libs/common/src/misc/wordlist.ts","webpack:///../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack:///../../libs/common/src/services/crypto.service.ts","webpack:///../../libs/common/src/models/domain/encryptedObject.ts","webpack:///../../libs/common/src/services/encrypt.service.ts","webpack:///../../libs/common/src/models/data/eventData.ts","webpack:///../../libs/common/src/models/request/eventRequest.ts","webpack:///../../libs/common/src/services/event.service.ts","webpack:///../../libs/common/src/models/export/cardExport.ts","webpack:///../../libs/common/src/models/export/fieldExport.ts","webpack:///../../libs/common/src/models/export/identityExport.ts","webpack:///../../libs/common/src/models/export/loginUriExport.ts","webpack:///../../libs/common/src/models/export/loginExport.ts","webpack:///../../libs/common/src/models/export/secureNoteExport.ts","webpack:///../../libs/common/src/models/export/cipherExport.ts","webpack:///../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack:///../../libs/common/src/models/export/collectionExport.ts","webpack:///../../libs/common/src/models/export/collectionWithIdExport.ts","webpack:///../../libs/common/src/models/export/eventExport.ts","webpack:///../../libs/common/src/models/domain/folder.ts","webpack:///../../libs/common/src/models/export/folderExport.ts","webpack:///../../libs/common/src/models/export/folderWithIdExport.ts","webpack:///../../libs/common/src/enums/fileUploadType.ts","webpack:///../../libs/common/src/services/export.service.ts","webpack:///../../libs/common/src/services/azureFileUpload.service.ts","webpack:///../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack:///../../libs/common/src/services/fileUpload.service.ts","webpack:///../../libs/common/src/models/data/folderData.ts","webpack:///../../libs/common/src/models/request/folderRequest.ts","webpack:///../../libs/common/src/services/folder/folder-api.service.ts","webpack:///../../libs/common/src/enums/organizationUserType.ts","webpack:///../../libs/common/src/services/folder/folder.service.ts","webpack:///../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///../../libs/common/src/services/keyConnector.service.ts","webpack:///../../libs/common/src/services/notifications.service.ts","webpack:///../../libs/common/src/models/domain/organization.ts","webpack:///../../libs/common/src/enums/ssoEnums.ts","webpack:///../../libs/common/src/services/organization.service.ts","webpack:///../../libs/common/src/models/api/ssoConfigApi.ts","webpack:///../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack:///../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///../../libs/common/src/models/response/keysResponse.ts","webpack:///../../libs/common/src/models/response/organizationKeysResponse.ts","webpack:///../../libs/common/src/models/response/organizationResponse.ts","webpack:///../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack:///../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///../../libs/common/src/services/passwordGeneration.service.ts","webpack:///../../libs/common/src/models/data/policyData.ts","webpack:///../../libs/common/src/models/domain/policy.ts","webpack:///../../libs/common/src/services/policy/policy-api.service.ts","webpack:///../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///../../libs/common/src/enums/providerUserStatusType.ts","webpack:///../../libs/common/src/enums/providerUserType.ts","webpack:///../../libs/common/src/services/policy/policy.service.ts","webpack:///../../libs/common/src/models/domain/provider.ts","webpack:///../../libs/common/src/services/provider.service.ts","webpack:///../../libs/common/src/services/search.service.ts","webpack:///../../libs/common/src/models/data/sendFileData.ts","webpack:///../../libs/common/src/models/data/sendTextData.ts","webpack:///../../libs/common/src/models/data/sendData.ts","webpack:///../../libs/common/src/models/domain/sendFile.ts","webpack:///../../libs/common/src/models/domain/sendText.ts","webpack:///../../libs/common/src/models/domain/send.ts","webpack:///../../libs/common/src/models/request/sendRequest.ts","webpack:///../../libs/common/src/services/send.service.ts","webpack:///../../libs/common/src/enums/storageLocation.ts","webpack:///../../libs/common/src/services/settings.service.ts","webpack:///../../libs/common/src/models/data/providerData.ts","webpack:///../../libs/common/src/models/domain/state.ts","webpack:///../../libs/common/src/services/state.service.ts","webpack:///../../libs/common/src/services/token.service.ts","webpack:///../../libs/common/src/services/stateMigration.service.ts","webpack:///../../libs/common/src/models/data/organizationData.ts","webpack:///../../libs/common/src/services/sync/sync.service.ts","webpack:///../../libs/common/src/services/totp.service.ts","webpack:///../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack:///../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack:///../../libs/common/src/services/userVerification/userVerification.service.ts","webpack:///../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack:///../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack:///../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack:///../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack:///../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack:///../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack:///../../libs/common/src/services/usernameGeneration.service.ts","webpack:///../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack:///../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack:///../../libs/common/src/models/domain/decryptParameters.ts","webpack:///../../libs/common/src/services/webCryptoFunction.service.ts","webpack:///../../libs/angular/src/services/broadcaster.service.ts","webpack:///../../libs/common/src/services/broadcaster.service.ts","webpack:///../../libs/angular/src/components/password-reprompt.component.ts","webpack:///../../libs/angular/src/services/passwordReprompt.service.ts","webpack:///../../libs/angular/src/services/jslib-services.module.ts","webpack:///../../libs/common/src/services/account/account-api.service.ts","webpack:///../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack:///../../libs/common/src/services/account/account.service.ts","webpack:///../../libs/common/src/services/formValidationErrors.service.ts","webpack:///../../libs/common/src/services/organization/organization-api.service.ts","webpack:///../../libs/common/src/services/config/config.service.ts","webpack:///../../libs/common/src/services/config/config-api.service.ts","webpack:///../../libs/common/src/abstractions/anonymousHub.service.ts","webpack:///../../libs/common/src/services/container.service.ts","webpack:///../../libs/common/src/services/memoryStorage.service.ts","webpack:///../../libs/common/src/services/system.service.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///../../libs/common/src/enums/clientType.ts","webpack:///./src/services/abstractChromeStorageApi.service.ts","webpack:///./src/services/browserLocalStorage.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/decorators/session-sync-observable/session-syncer.ts","webpack:///./src/decorators/session-sync-observable/sync-item-metadata.ts","webpack:///./src/decorators/session-sync-observable/session-sync.decorator.ts","webpack:///./src/services/folders/folder.service.ts","webpack:///./src/decorators/session-sync-observable/browser-session.decorator.ts","webpack:///./src/services/i18n.service.ts","webpack:///../../libs/common/src/services/i18n.service.ts","webpack:///./src/services/keyGeneration.service.ts","webpack:///./src/services/browserMemoryStorage.service.ts","webpack:///./src/services/localBackedSessionStorage.service.ts","webpack:///./src/decorators/dev-flag.decorator.ts","webpack:///./src/services/vaultTimeout/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack:///./src/services/browserFileDownloadService.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { AuthRequestPushNotification } from \"../models/response/notificationResponse\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\n\nimport { devFlagEnabled, devFlagValue } from \"../flags\";\nimport { GroupPolicyEnvironment } from \"../types/group-policy-environment\";\n\nexport class BrowserEnvironmentService extends EnvironmentService {\n  constructor(stateService: StateService, private logService: LogService) {\n    super(stateService);\n  }\n\n  async hasManagedEnvironment(): Promise<boolean> {\n    try {\n      return (await this.getManagedEnvironment()) != null;\n    } catch (e) {\n      this.logService.error(e);\n      return false;\n    }\n  }\n\n  async settingsHaveChanged() {\n    const env = await this.getManagedEnvironment();\n\n    return (\n      env.base != this.baseUrl ||\n      env.webVault != this.webVaultUrl ||\n      env.api != this.webVaultUrl ||\n      env.identity != this.identityUrl ||\n      env.icons != this.iconsUrl ||\n      env.notifications != this.notificationsUrl ||\n      env.events != this.eventsUrl\n    );\n  }\n\n  getManagedEnvironment(): Promise<GroupPolicyEnvironment> {\n    return devFlagEnabled(\"managedEnvironment\")\n      ? new Promise((resolve) => resolve(devFlagValue(\"managedEnvironment\")))\n      : new Promise((resolve, reject) => {\n          chrome.storage.managed.get(\"environment\", (result) => {\n            if (chrome.runtime.lastError) {\n              return reject(chrome.runtime.lastError);\n            }\n\n            resolve(result.environment);\n          });\n        });\n  }\n\n  async setUrlsToManagedEnvironment() {\n    const env = await this.getManagedEnvironment();\n    await this.setUrls({\n      base: env.base,\n      webVault: env.webVault,\n      api: env.api,\n      identity: env.identity,\n      icons: env.icons,\n      notifications: env.notifications,\n      events: env.events,\n    });\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => AbstractEncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Jsonify } from \"type-fest\";\n\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"close\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'settingsEdited' | i18n }}\"\n      *ngIf=\"showEditedManagedSettings\"\n    >\n      <a href=\"#\" appStopClick (click)=\"resetEnvironment()\">\n        {{ \"environmentEditedClick\" | i18n }}\n      </a>\n      {{ \"environmentEditedReset\" | i18n }}\n    </app-callout>\n\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"@bitwarden/angular/components/environment.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent implements OnInit {\n  showEditedManagedSettings = false;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    public environmentService: BrowserEnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  async ngOnInit() {\n    this.showEditedManagedSettings = await this.environmentService.settingsHaveChanged();\n  }\n\n  async resetEnvironment() {\n    const urls = await this.environmentService.getManagedEnvironment();\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.iconsUrl = urls.icons;\n    this.identityUrl = urls.identity;\n    this.notificationsUrl = urls.notifications;\n    this.iconsUrl = urls.icons;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordlessCreateAuthRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { AuthRequestResponse } from \"../models/response/authRequestResponse\";\nimport { RegisterResponse } from \"../models/response/authentication/registerResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <button type=\"button\" class=\"btn primary block\" routerLink=\"/login\">\n      <b>{{ \"login\" | i18n }}</b>\n    </button>\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn block\" routerLink=\"/register\">\n      {{ \"createAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<button type=\"button\" routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</button>\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","export class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static sendMessage(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    return chrome.runtime.sendMessage(message);\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return (win.location as any).reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"main\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"main\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n  Passwordless = 3,\n}\n","import { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  selfHosted = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [true],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    let email = this.formGroup.get(\"email\")?.value;\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n      this.formGroup.get(\"email\")?.setValue(email);\n\n      if (email == null) {\n        this.formGroup.get(\"email\")?.setValue(\"\");\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      const rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n      this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n    }\n  }\n\n  async submit(showToast = true) {\n    const email = this.formGroup.get(\"email\")?.value;\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    const rememberEmail = this.formGroup.get(\"rememberEmail\")?.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        email,\n        masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  protected focusInput() {\n    const email = this.formGroup.get(\"email\")?.value;\n    document.getElementById(email == null || email === \"\" ? \"email\" : \"masterPassword\").focus();\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  sync$: Observable<SyncEventArgs>;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"masterPassword\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center text-muted\" *ngIf=\"selfHostedDomain\">\n      {{ \"loggingInTo\" | i18n: selfHostedDomain }}\n    </p>\n    <p class=\"text-center\">\n      <button type=\"button\" routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/registerResponse\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.get(\"name\")?.value;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.get(\"hint\")?.value;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                class=\"monospaced\"\n                formControlName=\"masterPassword\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"formGroup.get('masterPassword')?.value\"\n            [email]=\"formGroup.get('email')?.value\"\n            [name]=\"formGroup.get('name')?.value\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"confirmMasterPassword\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" formControlName=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input type=\"checkbox\" id=\"acceptPolicies\" formControlName=\"acceptPolicies\" />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  color: string;\n  text: string;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ passwordStrengthComponent?.masterPasswordScoreColor }}\"\n                    *ngIf=\"passwordStrengthComponent?.masterPasswordScoreText\"\n                  >\n                    {{ passwordStrengthComponent?.masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n\n            <app-password-strength\n              [password]=\"masterPassword\"\n              [email]=\"email\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n              (passwordScoreColor)=\"getPasswordScoreText($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/2fa\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">{{ \"back\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"masterPassword\"\n            [email]=\"email\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (\n        (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) ||\n        this.popupUtilsService.inPopout(window)\n      ) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n        [disabled]=\"form.loading\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"form.loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\" class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"duckduckgo-apikey\"\n              type=\"password\"\n              name=\"DuckDudkGoApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"fastmail-apiToken\"\n              type=\"password\"\n              name=\"FastmailApiToken\"\n              [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  abstract getFromSessionMemory<T>(key: string, deserializer?: (obj: Jsonify<T>) => T): Promise<T>;\n  abstract setInSessionMemory(key: string, value: any): Promise<void>;\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\">{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  existingExcludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n        this.existingExcludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    const newExcludedDomains = this.getNewlyAddedDomians(this.excludedDomains);\n    for (const domain of this.excludedDomains) {\n      const resp = newExcludedDomains.filter((e) => e.uri === domain.uri);\n      if (resp.length === 0) {\n        savedDomains[domain.uri] = null;\n      } else {\n        if (domain.uri && domain.uri !== \"\") {\n          const validDomain = Utils.getHostname(domain.uri);\n          if (!validDomain) {\n            this.platformUtilsService.showToast(\n              \"error\",\n              null,\n              this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n            );\n            return;\n          }\n          savedDomains[validDomain] = null;\n        }\n      }\n    }\n\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  getNewlyAddedDomians(domain: ExcludedDomain[]): ExcludedDomain[] {\n    const result = this.excludedDomains.filter(\n      (newDomain) =>\n        !this.existingExcludedDomains.some((oldDomain) => newDomain.uri === oldDomain.uri)\n    );\n    return result;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EncryptedExportType {\n  AccountEncrypted = 0,\n  FileEncrypted = 1,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Directive, EventEmitter, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { merge, takeUntil, Subject, startWith } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { EncryptedExportType } from \"@bitwarden/common/enums/encryptedExportType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit, OnDestroy {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n  showFilePassword: boolean;\n  showConfirmFilePassword: boolean;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n    filePassword: [\"\", Validators.required],\n    confirmFilePassword: [\"\", Validators.required],\n    fileEncryptionType: [EncryptedExportType.AccountEncrypted],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: UntypedFormBuilder,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n\n    merge(\n      this.exportForm.get(\"format\").valueChanges,\n      this.exportForm.get(\"fileEncryptionType\").valueChanges\n    )\n      .pipe(takeUntil(this.destroy$))\n      .pipe(startWith(0))\n      .subscribe(() => this.adjustValidators());\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  protected async doExport() {\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n      this.exportForm.clearValidators();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n    const secret = this.exportForm.get(\"secret\").value;\n\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    this.doExport();\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    if (\n      this.format === \"encrypted_json\" &&\n      this.fileEncryptionType === EncryptedExportType.FileEncrypted\n    ) {\n      return this.exportService.getPasswordProtectedExport(this.filePassword);\n    } else {\n      return this.exportService.getExport(this.format, null);\n    }\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<void> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  get filePassword() {\n    return this.exportForm.get(\"filePassword\").value;\n  }\n\n  get confirmFilePassword() {\n    return this.exportForm.get(\"confirmFilePassword\").value;\n  }\n\n  get fileEncryptionType() {\n    return this.exportForm.get(\"fileEncryptionType\").value;\n  }\n\n  toggleFilePassword() {\n    this.showFilePassword = !this.showFilePassword;\n    document.getElementById(\"filePassword\").focus();\n  }\n\n  toggleConfirmFilePassword() {\n    this.showConfirmFilePassword = !this.showConfirmFilePassword;\n    document.getElementById(\"confirmFilePassword\").focus();\n  }\n\n  adjustValidators() {\n    this.exportForm.get(\"confirmFilePassword\").reset();\n    this.exportForm.get(\"filePassword\").reset();\n\n    if (this.encryptedFormat && this.fileEncryptionType == EncryptedExportType.FileEncrypted) {\n      this.exportForm.controls.filePassword.enable();\n      this.exportForm.controls.confirmFilePassword.enable();\n    } else {\n      this.exportForm.controls.filePassword.disable();\n      this.exportForm.controls.confirmFilePassword.disable();\n    }\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.fileDownloadService.download({\n      fileName: fileName,\n      blobData: csv,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"@bitwarden/angular/components/export.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/folders\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addFolder()\" appA11yTitle=\"{{ 'addFolder' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"(folders$ | async)?.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders$ | async\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!(folders$ | async)?.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map, Observable } from \"rxjs\";\n\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent {\n  folders$: Observable<FolderView[]>;\n\n  constructor(private folderService: FolderService, private router: Router) {\n    this.folders$ = this.folderService.folderViews$.pipe(\n      map((folders) => {\n        if (folders.length > 0) {\n          folders = folders.slice(0, folders.length - 1);\n        }\n\n        return folders;\n      })\n    );\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"enableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"enableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"enableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"enableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"enableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"enableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"changedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"enableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateContextMenuItem()\"\n            [(ngModel)]=\"enableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"contextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showCardsCurrentTab\">{{ \"showCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showCardsCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowCardsCurrentTab()\"\n            [(ngModel)]=\"showCardsCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showIdentitiesCurrentTab\">{{ \"showIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showIdentitiesCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentitiesCurrentTab()\"\n            [(ngModel)]=\"showIdentitiesCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"enableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateFavicon()\"\n            [(ngModel)]=\"enableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"faviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"enableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateBadgeCounter()\"\n            [(ngModel)]=\"enableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"badgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  enableFavicon = false;\n  enableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  enableAutoTotpCopy = false; // TODO: Does it matter if this is set to false or true?\n  enableContextMenuItem = false;\n  enableAddLoginNotification = false;\n  enableChangedPasswordNotification = false;\n  showCardsCurrentTab = false;\n  showIdentitiesCurrentTab = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService,\n    private themingService: AbstractThemingService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.enableAddLoginNotification = !(await this.stateService.getDisableAddLoginNotification());\n\n    this.enableChangedPasswordNotification =\n      !(await this.stateService.getDisableChangedPasswordNotification());\n\n    this.enableContextMenuItem = !(await this.stateService.getDisableContextMenuItem());\n\n    this.showCardsCurrentTab = !(await this.stateService.getDontShowCardsCurrentTab());\n    this.showIdentitiesCurrentTab = !(await this.stateService.getDontShowIdentitiesCurrentTab());\n\n    this.enableAutoTotpCopy = !(await this.stateService.getDisableAutoTotpCopy());\n\n    this.enableFavicon = !(await this.stateService.getDisableFavicon());\n\n    this.enableBadgeCounter = !(await this.stateService.getDisableBadgeCounter());\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(!this.enableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      !this.enableChangedPasswordNotification\n    );\n  }\n\n  async updateContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(!this.enableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(!this.enableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateFavicon() {\n    await this.stateService.setDisableFavicon(!this.enableFavicon);\n  }\n\n  async updateBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(!this.enableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCardsCurrentTab() {\n    await this.stateService.setDontShowCardsCurrentTab(!this.showCardsCurrentTab);\n  }\n\n  async updateShowIdentitiesCurrentTab() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(!this.showIdentitiesCurrentTab);\n  }\n\n  async saveTheme() {\n    await this.themingService.updateConfiguredTheme(this.theme);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"goBack()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"@bitwarden/angular/components/premium.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private location: Location,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"@bitwarden/angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <p class=\"text-center\">\n          <i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i>\n        </p>\n        <p class=\"text-center\">\n          <b>Bitwarden</b>\n        </p>\n        <p class=\"text-center\">&copy; Bitwarden Inc. 2015-{{ year }}</p>\n        <p class=\"text-center\">{{ \"version\" | i18n }}: {{ version }}</p>\n        <ng-container *ngIf=\"serverConfig$ | async as serverConfig\">\n          <p class=\"text-center\" *ngIf=\"isCloud\">\n            {{ \"serverVersion\" | i18n }}: {{ this.serverConfig?.version }}\n            <span *ngIf=\"!serverConfig.isValid()\">\n              ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n            </span>\n          </p>\n\n          <ng-container *ngIf=\"!isCloud\">\n            <ng-container *ngIf=\"serverConfig.server\">\n              <p class=\"text-center\">\n                {{ \"serverVersion\" | i18n }} <small>({{ \"thirdParty\" | i18n }})</small>:\n                {{ this.serverConfig?.version }}\n                <span *ngIf=\"!serverConfig.isValid()\">\n                  ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n                </span>\n              </p>\n              <div class=\"text-center\">\n                <small>{{ \"thirdPartyServerMessage\" | i18n: serverConfig.server?.name }}</small>\n              </div>\n            </ng-container>\n\n            <p class=\"text-center\" *ngIf=\"!serverConfig.server\">\n              {{ \"serverVersion\" | i18n }} <small>({{ \"selfHosted\" | i18n }})</small>:\n              {{ this.serverConfig?.version }}\n              <span *ngIf=\"!serverConfig.isValid()\">\n                ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n              </span>\n            </p>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"@bitwarden/common/abstractions/config/server-config\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-about\",\n  templateUrl: \"about.component.html\",\n})\nexport class AboutComponent {\n  serverConfig$: Observable<ServerConfig>;\n\n  year = new Date().getFullYear();\n  version = BrowserApi.getApplicationVersion();\n  isCloud: boolean;\n\n  constructor(configService: ConfigServiceAbstraction, environmentService: EnvironmentService) {\n    this.serverConfig$ = configService.serverConfig$;\n    this.isCloud = environmentService.isCloud();\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/folders\"\n      >\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/sync\"\n      >\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/excluded-domains\"\n      >\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div\n        class=\"box-content-row box-content-row-checkbox\"\n        appBoxRow\n        *ngIf=\"supportsBiometric && biometric\"\n      >\n        <label for=\"autoBiometricsPrompt\">{{ \"enableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"enableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button type=\"button\" class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/options\"\n      >\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { AboutComponent } from \"./about.component\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  enableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutSettingsService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutSettingsService.isBiometricLockSet();\n    this.enableAutoBiometricsPrompt = !(await this.stateService.getDisableAutoBiometricsPrompt());\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    // The minTimeoutError does not apply to browser because it supports Immediately\n    // So only check for the policyError\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutSettingsService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricFingerprintValidated(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(!this.enableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    this.modalService.open(AboutComponent);\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          type=\"button\"\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { LocalData } from \"../data/localData\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        role=\"group\"\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n        attr.aria-label=\"{{ f.name }}\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n          attr.aria-describedby=\"fieldName{{ i }}\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            role=\"group\"\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"u.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"u.showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","import { EncryptionType } from \"@bitwarden/common/enums/encryptionType\";\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (aType === \"TOTP\") {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        <span class=\"truncate-box\">\n          <span class=\"truncate\">{{ cipher.name }}</span>\n          <ng-container *ngIf=\"cipher.organizationId\">\n            <i\n              class=\"bwi bwi-collection text-muted\"\n              title=\"{{ 'shared' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n          </ng-container>\n          <ng-container *ngIf=\"cipher.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip text-muted\"\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n          </ng-container>\n        </span>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","<div class=\"content org-filter-content\" *ngIf=\"loaded && show\">\n  <button\n    #toggleVaults\n    class=\"org-filter\"\n    (click)=\"openOverlay()\"\n    aria-haspopup=\"menu\"\n    aria-controls=\"cdk-overlay-container\"\n    [attr.aria-expanded]=\"isOpen\"\n    [attr.aria-label]=\"vaultFilterDisplay\"\n  >\n    {{ vaultFilterDisplay | ellipsis: 45 }}&nbsp;\n    <i\n      class=\"bwi bwi-sm\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n    ></i>\n  </button>\n  <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n    <div\n      class=\"vault-select\"\n      [@transformPanel]=\"'open'\"\n      cdkTrapFocus\n      cdkTrapFocusAutoCapture\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <button\n        appStopClick\n        (click)=\"selectAllVaults()\"\n        [ngClass]=\"{ active: !myVaultOnly && !selectOrganizationId }\"\n        appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'allVaults' | i18n }}\"\n      >\n        <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"allVaults\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"!enforcePersonalOwnwership\"\n        appStopClick\n        (click)=\"selectMyVault()\"\n        appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n      >\n        <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"myVault\" | i18n }}\n      </button>\n      <button\n        *ngFor=\"let organization of organizations\"\n        appStopClick\n        (click)=\"selectOrganization(organization)\"\n        appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n      >\n        <i\n          *ngIf=\"organization.planProductType !== 1\"\n          class=\"bwi bwi-fw bwi-business\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          *ngIf=\"organization.planProductType === 1\"\n          class=\"bwi bwi-fw bwi-family\"\n          aria-hidden=\"true\"\n        ></i>\n        <span>&nbsp;{{ organization.name | ellipsis: (organization.enabled ? 21 : 18):true }}</span>\n        <i\n          *ngIf=\"!organization.enabled\"\n          class=\"bwi bwi-fw bwi-exclamation-triangle text-danger\"\n          aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n          appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n        ></i>\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  HostListener,\n} from \"@angular/core\";\nimport { merge } from \"rxjs\";\n\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultSelectComponent implements OnInit {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  isOpen = false;\n  loaded = false;\n  organizations: Organization[];\n  vaultFilter: VaultFilter = new VaultFilter();\n  vaultFilterDisplay = \"\";\n  enforcePersonalOwnwership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n\n  get show() {\n    return (\n      (this.organizations.length > 0 && !this.enforcePersonalOwnwership) ||\n      (this.organizations.length > 1 && this.enforcePersonalOwnwership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  @HostListener(\"document:keydown.escape\", [\"$event\"])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isOpen) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.broadcasterService.subscribe(this.constructor.name, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            await this.load();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.organizations = (await this.vaultFilterService.buildOrganizations()).sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    this.enforcePersonalOwnwership =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n    if (this.show) {\n      if (this.enforcePersonalOwnwership && !this.vaultFilter.myVaultOnly) {\n        this.vaultFilterService.setVaultFilter(this.organizations[0].id);\n        this.vaultFilter.selectedOrganizationId = this.organizations[0].id;\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else if (this.vaultFilter.myVaultOnly) {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n      } else if (this.vaultFilter.selectedOrganizationId != null) {\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n      }\n    }\n    this.loaded = true;\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    if (!organization.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    } else {\n      this.vaultFilterDisplay = organization.name;\n      this.vaultFilterService.setVaultFilter(organization.id);\n      this.onVaultSelectionChanged.emit();\n      this.close();\n    }\n  }\n  selectAllVaults() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.vaultFilterService.getFolderNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport AutofillField from \"../../models/autofillField\";\nimport AutofillForm from \"../../models/autofillForm\";\nimport AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport interface PageDetail {\n  frameId: number;\n  tab: chrome.tabs.Tab;\n  details: AutofillPageDetails;\n}\n\nexport interface AutoFillOptions {\n  cipher: CipherView;\n  pageDetails: PageDetail[];\n  doc?: typeof window.document;\n  tab: chrome.tabs.Tab;\n  skipUsernameOnlyFill?: boolean;\n  onlyEmptyFields?: boolean;\n  onlyVisibleFields?: boolean;\n  fillNewPassword?: boolean;\n  skipLastUsed?: boolean;\n}\n\nexport interface FormData {\n  form: AutofillForm;\n  password: AutofillField;\n  username: AutofillField;\n  passwords: AutofillField[];\n}\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => FormData[];\n  doAutoFill: (options: AutoFillOptions) => Promise<string>;\n  doAutoFillOnTab: (\n    pageDetails: PageDetail[],\n    tab: chrome.tabs.Tab,\n    fromCommand: boolean\n  ) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: PageDetail[], fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out *ngIf=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  tab: chrome.tabs.Tab;\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  isLoading = false;\n  showOrganizations = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.isLoading) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.isLoading) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    this.isLoading = false;\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab != null) {\n      this.url = this.tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.isLoading = this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.isLoading = this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"@bitwarden/common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"@bitwarden/angular/components/password-history.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select (onVaultSelectionChanged)=\"vaultFilterChanged()\"></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button type=\"button\" class=\"box-content-row\" appStopClick (click)=\"selectTrash()\">\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await firstValueFrom(\n      this.vaultFilterService.buildNestedFolders(this.selectedOrganization)\n    );\n    this.folders = allFolders.fullList;\n    this.nestedFolders = allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  showPremiumRequiredTotp: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.showPremiumRequiredTotp =\n      this.cipher.login.totp && !this.canAccessPremium && !this.cipher.organizationUseTotp;\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span\n          *ngIf=\"field.type != fieldType.Linked\"\n          class=\"row-label draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, field.value)\"\n          >{{ field.name }}</span\n        >\n        <span *ngIf=\"field.type === fieldType.Linked\" class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"@bitwarden/angular/components/view-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label\n          for=\"name\"\n          class=\"draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, cipher.name)\"\n          >{{ \"name\" | i18n }}</label\n        >\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"box-content-row box-content-row-flex totp\" *ngIf=\"showPremiumRequiredTotp\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"verificationCodeTotp\" | i18n }}</span>\n            <span class=\"row-label\">\n              <a routerLink=\"/premium\">\n                {{ \"premiumSubcriptionRequired\" | i18n }}\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.cardholderName)\"\n            >{{ \"cardholderName\" | i18n }}</span\n          >\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.card.number)\"\n              >{{ \"number\" | i18n }}</span\n            >\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.brand)\"\n            >{{ \"brand\" | i18n }}</span\n          >\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.expiration)\"\n            >{{ \"expiration\" | i18n }}</span\n          >\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.card.code)\"\n              >{{ \"securityCode\" | i18n }}</span\n            >\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.fullName)\"\n            >{{ \"identityName\" | i18n }}</span\n          >\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.username)\"\n            >{{ \"username\" | i18n }}</span\n          >\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.company)\"\n            >{{ \"company\" | i18n }}</span\n          >\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.ssn)\"\n            >{{ \"ssn\" | i18n }}</span\n          >\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.passportNumber)\"\n            >{{ \"passportNumber\" | i18n }}</span\n          >\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.licenseNumber)\"\n            >{{ \"licenseNumber\" | i18n }}</span\n          >\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.email)\"\n            >{{ \"email\" | i18n }}</span\n          >\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.phone)\"\n            >{{ \"phone\" | i18n }}</span\n          >\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"\n              setTextDataOnDrag(\n                $event,\n                (cipher.identity.address1 ? cipher.identity.address1 + '\\n' : '') +\n                  (cipher.identity.address2 ? cipher.identity.address2 + '\\n' : '') +\n                  (cipher.identity.address3 ? cipher.identity.address3 + '\\n' : '') +\n                  (cipher.identity.fullAddressPart2\n                    ? cipher.identity.fullAddressPart2 + '\\n'\n                    : '') +\n                  (cipher.identity.country ? cipher.identity.country : '')\n              )\n            \"\n            >{{ \"address\" | i18n }}</span\n          >\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label\n            for=\"hostOrUri{{ i }}\"\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, u.uri)\"\n            *ngIf=\"!u.isWebsite\"\n            >{{ \"uri\" | i18n }}</label\n          >\n          <label\n            for=\"hostOrUri{{ i }}\"\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, u.uri)\"\n            *ngIf=\"u.isWebsite\"\n            >{{ \"website\" | i18n }}</label\n          >\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label\n        for=\"notes\"\n        class=\"draggable\"\n        draggable=\"true\"\n        (dragstart)=\"setTextDataOnDrag($event, cipher.notes)\"\n        >{{ \"notes\" | i18n }}</label\n      >\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <button\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"@bitwarden/angular/components/view.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SecurityContext,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount$.pipe(takeUntil(this.destroy$)).subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.activeUserId === null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const forceWindowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        // Wait to make sure background has reloaded first.\n        window.setTimeout(\n          () => BrowserApi.reloadExtension(forceWindowReload ? window : null),\n          2000\n        );\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { ServerConfigResponse } from \"@bitwarden/common/models/response/server-config-response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import { VerifyOTPRequest } from \"@bitwarden/common/models/request/account/verifyOTPRequest\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config-response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Except, Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { DeepJsonify } from \"@bitwarden/common/types/deep-jsonify\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: Jsonify<EncryptionPair<Jsonify<TEncrypted>, Jsonify<TDecrypted>>>,\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Object.assign(this as Except<AccountKeys, \"publicKey\">, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: { [id: string]: any };\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notificationResponse\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nimport { ICaptchaProtectedResponse } from \"./ICaptchaProtectedResponse\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordlessCreateAuthRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { AuthRequestResponse } from \"../models/response/authRequestResponse\";\nimport { RegisterResponse } from \"../models/response/authentication/registerResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.localHashedPassword = credentials.localPasswordHash;\n    this.key = credentials.decKey;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AuthRequestPushNotification } from \"../models/response/notificationResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy:\n    | ApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Api:\n        strategy = new ApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { LocalData } from \"../data/localData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<number>[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"@bitwarden/common/models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.policyService.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return this.policyService.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  private _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts),\n    });\n  }\n\n  private static buildAccountMapFromJSON(\n    jsonAccounts: Jsonify<{ [userId: string]: Jsonify<Account> }>\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: Account } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = Account.fromJSON(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return this.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = this.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return this.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = this.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private mapToRecord<V>(map: Map<string, V>): Record<string, V> {\n    return map == null ? null : Object.fromEntries(map);\n  }\n\n  private recordToMap<V>(record: Record<string, V>): Map<string, V> {\n    return record == null ? null : new Map(Object.entries(record));\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { CollectionData } from \"../../models/data/collectionData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { OrganizationData } from \"../../models/data/organizationData\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { ProviderData } from \"../../models/data/providerData\";\nimport { SendData } from \"../../models/data/sendData\";\nimport { CipherResponse } from \"../../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../../models/response/domainsResponse\";\nimport { FolderResponse } from \"../../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\nimport { ProfileResponse } from \"../../models/response/profileResponse\";\nimport { SendResponse } from \"../../models/response/sendResponse\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n    this._sync.next({ status: \"Started\" });\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    this._sync.next({ status: successfully ? \"SuccessfullyCompleted\" : \"UnsuccessfullyCompleted\" });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  WINDOW,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOGOUT_CALLBACK,\n  LOCKED_CALLBACK,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  LOG_MAC_FAILURES,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","import { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ServerConfigData } from \"@bitwarden/common/models/data/server-config.data\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"@bitwarden/common/models/response/server-config-response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(\n    private cryptoService: CryptoService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): AbstractEncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(authService: AuthService): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      const keys = Object.keys(accounts);\n      if (keys.length > 0) {\n        for (const userId of keys) {\n          if ((await authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n            return;\n          }\n        }\n      }\n    }\n\n    // A reloadInterval has already been set and is executing\n    if (this.reloadInterval != null) {\n      return;\n    }\n\n    // User has set a PIN, with ask for master password on restart, to protect their vault\n    const decryptedPinProtected = await this.stateService.getDecryptedPinProtected();\n    if (decryptedPinProtected != null) {\n      return;\n    }\n\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => await this.executeProcessReload(), 10000);\n  }\n\n  private async inactiveMoreThanSeconds(seconds: number): Promise<boolean> {\n    const lastActive = await this.stateService.getLastActive();\n    if (lastActive != null) {\n      const diffMs = new Date().getTime() - lastActive;\n      return diffMs >= seconds * 1000;\n    }\n    return true;\n  }\n\n  private async executeProcessReload() {\n    const accounts = this.stateService.accounts.getValue();\n    const doRefresh =\n      accounts == null ||\n      Object.keys(accounts).length == 0 ||\n      (await this.inactiveMoreThanSeconds(5));\n\n    const biometricLockedFingerprintValidated =\n      await this.stateService.getBiometricFingerprintValidated();\n    if (doRefresh && !biometricLockedFingerprintValidated) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n      this.messagingService.send(\"reloadProcess\");\n      if (this.reloadCallback != null) {\n        await this.reloadCallback();\n      }\n    }\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport {\n  AutoFillOptions,\n  AutofillService as AutofillServiceInterface,\n  PageDetail,\n  FormData,\n} from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport interface GenerateFillScriptOptions {\n  skipUsernameOnlyFill: boolean;\n  onlyEmptyFields: boolean;\n  onlyVisibleFields: boolean;\n  fillNewPassword: boolean;\n  cipher: CipherView;\n}\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): FormData[] {\n    const formData: FormData[] = [];\n\n    const passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      true,\n      true,\n      false,\n      false\n    );\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: AutoFillOptions) {\n    const tab = options.tab;\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    let totpPromise: Promise<string> = null;\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.stateService.getDisableAutoTotpCopy().then((disabled) => {\n        if (!disabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillOnTab(pageDetails: PageDetail[], tab: chrome.tabs.Tab, fromCommand: boolean) {\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      tab: tab,\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  async doAutoFillActiveTab(pageDetails: PageDetail[], fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    return await this.doAutoFillOnTab(pageDetails, tab, fromCommand);\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<chrome.tabs.Tab> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(\n    pageDetails: AutofillPageDetails,\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f) => {\n        if (AutofillService.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val: string;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId) as string;\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          AutofillService.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = AutofillService.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          AutofillService.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      AutofillService.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      AutofillService.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && AutofillService.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      AutofillService.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && AutofillService.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      AutofillService.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (\n      fillFields.exp &&\n      AutofillService.hasValue(card.expMonth) &&\n      AutofillService.hasValue(card.expYear)\n    ) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: AutofillField, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (AutofillService.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (AutofillService.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (AutofillService.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && AutofillService.hasValue(identity.address1)) {\n      let address = \"\";\n      if (AutofillService.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (AutofillService.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (AutofillService.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private static isFieldMatch(\n    value: string,\n    options: string[],\n    containsOptions?: string[]\n  ): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (AutofillService.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (\n              AutofillService.hasValue(option[j]) &&\n              option[j].toLowerCase() === dataValue.toLowerCase()\n            ) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      AutofillService.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  static loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!AutofillService.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  static fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (AutofillService.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-tag\"]) &&\n      this.fuzzyMatch(names, field[\"label-tag\"])\n    ) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-left\"]) &&\n      this.fuzzyMatch(names, field[\"label-left\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-top\"]) &&\n      this.fuzzyMatch(names, field[\"label-top\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-aria\"]) &&\n      this.fuzzyMatch(names, field[\"label-aria\"])\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private static fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  static setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  static fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  static forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","import { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport default abstract class AbstractChromeStorageService implements AbstractStorageService {\n  protected abstract chromeStorageApi: chrome.storage.StorageArea;\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<void> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserLocalStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.local;\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    return BrowserApi.sendMessage(subscriber, arg);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AbstractCachedStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport {\n  StateService as BaseStateService,\n  withPrototype,\n} from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async getFromSessionMemory<T>(key: string, deserializer?: (obj: Jsonify<T>) => T): Promise<T> {\n    return this.memoryStorageService instanceof AbstractCachedStorageService\n      ? await this.memoryStorageService.getBypassCache<T>(key, { deserializer: deserializer })\n      : await this.memoryStorageService.get<T>(key);\n  }\n\n  async setInSessionMemory(key: string, value: any): Promise<void> {\n    await this.memoryStorageService.save(key, value);\n  }\n\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(await this.defaultInMemoryOptions())) != null\n    );\n  }\n\n  @withPrototype(BrowserGroupingsComponentState)\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.groupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserComponentState)\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.ciphers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserSendComponentState)\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.send = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserComponentState)\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.sendType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n}\n","import { BehaviorSubject, concatMap, Subscription } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\n\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\nexport class SessionSyncer {\n  subscription: Subscription;\n  id = Utils.newGuid();\n\n  // everyone gets the same initial values\n  private ignoreNextUpdate = true;\n\n  constructor(\n    private behaviorSubject: BehaviorSubject<any>,\n    private stateService: StateService,\n    private metaData: SyncedItemMetadata\n  ) {\n    if (!(behaviorSubject instanceof BehaviorSubject)) {\n      throw new Error(\"behaviorSubject must be an instance of BehaviorSubject\");\n    }\n\n    if (metaData.ctor == null && metaData.initializer == null) {\n      throw new Error(\"ctor or initializer must be provided\");\n    }\n  }\n\n  init() {\n    if (chrome.runtime.getManifest().manifest_version != 3) {\n      return;\n    }\n\n    this.observe();\n    this.listenForUpdates();\n  }\n\n  private observe() {\n    // This may be a memory leak.\n    // There is no good time to unsubscribe from this observable. Hopefully Manifest V3 clears memory from temporary\n    // contexts. If so, this is handled by destruction of the context.\n    this.subscription = this.behaviorSubject\n      .pipe(\n        concatMap(async (next) => {\n          if (this.ignoreNextUpdate) {\n            this.ignoreNextUpdate = false;\n            return;\n          }\n          await this.updateSession(next);\n        })\n      )\n      .subscribe();\n  }\n\n  private listenForUpdates() {\n    // This is an unawaited promise, but it will be executed asynchronously in the background.\n    BrowserApi.messageListener(\n      this.updateMessageCommand,\n      async (message) => await this.updateFromMessage(message)\n    );\n  }\n\n  async updateFromMessage(message: any) {\n    if (message.command != this.updateMessageCommand || message.id === this.id) {\n      return;\n    }\n    const builder = SyncedItemMetadata.builder(this.metaData);\n    const value = await this.stateService.getFromSessionMemory(this.metaData.sessionKey, builder);\n    this.ignoreNextUpdate = true;\n    this.behaviorSubject.next(value);\n  }\n\n  private async updateSession(value: any) {\n    await this.stateService.setInSessionMemory(this.metaData.sessionKey, value);\n    await BrowserApi.sendMessage(this.updateMessageCommand, { id: this.id });\n  }\n\n  private get updateMessageCommand() {\n    return `${this.metaData.sessionKey}_update`;\n  }\n}\n","export class SyncedItemMetadata {\n  propertyKey: string;\n  sessionKey: string;\n  ctor?: new () => any;\n  initializer?: (keyValuePair: any) => any;\n  initializeAsArray?: boolean;\n\n  static builder(metadata: SyncedItemMetadata): (o: any) => any {\n    const itemBuilder =\n      metadata.initializer != null\n        ? metadata.initializer\n        : (o: any) => Object.assign(new metadata.ctor(), o);\n    if (metadata.initializeAsArray) {\n      return (keyValuePair: any) => keyValuePair.map((o: any) => itemBuilder(o));\n    } else {\n      return (keyValuePair: any) => itemBuilder(keyValuePair);\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SessionStorable } from \"./session-storable\";\n\nclass BuildOptions<T> {\n  ctor?: new () => T;\n  initializer?: (keyValuePair: Jsonify<T>) => T;\n  initializeAsArray? = false;\n}\n\n/**\n * A decorator used to indicate the BehaviorSubject should be synced for this browser session across all contexts.\n *\n * >**Note** This decorator does nothing if the enclosing class is not decorated with @browserSession.\n *\n * >**Note** The Behavior subject must be initialized with a default or in the constructor of the class. If it is not, an error will be thrown.\n *\n * >**!!Warning!!** If the property is overwritten at any time, the new value will not be synced across the browser session.\n *\n * @param buildOptions\n * Builders for the value, requires either a constructor (ctor) for your BehaviorSubject type or an\n * initializer function that takes a key value pair representation of the BehaviorSubject data\n * and returns your instantiated BehaviorSubject value. `initializeAsArray can optionally be used to indicate\n * the provided initializer function should be used to build an array of values. For example,\n * ```ts\n * \\@sessionSync({ initializer: Foo.fromJSON, initializeAsArray: true })\n * ```\n * is equivalent to\n * ```\n * \\@sessionSync({ initializer: (obj: any[]) => obj.map((f) => Foo.fromJSON })\n * ```\n *\n * @returns decorator function\n */\nexport function sessionSync<T>(buildOptions: BuildOptions<T>) {\n  return (prototype: unknown, propertyKey: string) => {\n    // Force prototype into SessionStorable and implement it.\n    const p = prototype as SessionStorable;\n\n    if (p.__syncedItemMetadata == null) {\n      p.__syncedItemMetadata = [];\n    }\n\n    p.__syncedItemMetadata.push({\n      propertyKey,\n      sessionKey: `${prototype.constructor.name}_${propertyKey}`,\n      ctor: buildOptions.ctor,\n      initializer: buildOptions.initializer,\n      initializeAsArray: buildOptions.initializeAsArray,\n    });\n  };\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { FolderService as BaseFolderService } from \"@bitwarden/common/services/folder/folder.service\";\n\nimport { browserSession, sessionSync } from \"../../decorators/session-sync-observable\";\n\n@browserSession\nexport class FolderService extends BaseFolderService {\n  @sessionSync({ initializer: Folder.fromJSON, initializeAsArray: true })\n  protected _folders: BehaviorSubject<Folder[]>;\n  @sessionSync({ initializer: FolderView.fromJSON, initializeAsArray: true })\n  protected _folderViews: BehaviorSubject<FolderView[]>;\n}\n","import { Constructor } from \"type-fest\";\n\nimport { StateService } from \"../../services/state.service\";\n\nimport { SessionStorable } from \"./session-storable\";\nimport { SessionSyncer } from \"./session-syncer\";\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\n/**\n * Mark the class as syncing state across the browser session. This decorator finds rxjs BehaviorSubject properties\n * marked with @sessionSync and syncs these values across the browser session.\n *\n * @param constructor\n * @returns A new constructor that extends the original one to add session syncing.\n */\nexport function browserSession<TCtor extends Constructor<any>>(constructor: TCtor) {\n  return class extends constructor implements SessionStorable {\n    __syncedItemMetadata: SyncedItemMetadata[];\n    __sessionSyncers: SessionSyncer[];\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Require state service to be injected\n      const stateService = args.find((arg) => arg instanceof StateService);\n      if (!stateService) {\n        throw new Error(\n          `Cannot decorate ${constructor.name} with browserSession, Browser's StateService must be injected`\n        );\n      }\n\n      if (this.__syncedItemMetadata == null || !(this.__syncedItemMetadata instanceof Array)) {\n        return;\n      }\n\n      this.__sessionSyncers = this.__syncedItemMetadata.map((metadata) =>\n        this.buildSyncer(metadata, stateService)\n      );\n    }\n\n    buildSyncer(metadata: SyncedItemMetadata, stateService: StateService) {\n      const syncer = new SessionSyncer((this as any)[metadata.propertyKey], stateService, metadata);\n      syncer.init();\n      return syncer;\n    }\n  };\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\n\nexport class KeyGenerationService implements AbstractKeyGenerationService {\n  constructor(private cryptoFunctionService: CryptoFunctionService) {}\n\n  async makeEphemeralKey(numBytes = 16): Promise<SymmetricCryptoKey> {\n    const keyMaterial = await this.cryptoFunctionService.randomBytes(numBytes);\n    const key = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-ephemeral\",\n      \"ephemeral\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(key);\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserMemoryStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.session;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport {\n  AbstractCachedStorageService,\n  MemoryStorageServiceInterface,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MemoryStorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { devFlag } from \"../decorators/dev-flag.decorator\";\nimport { devFlagEnabled } from \"../flags\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\nimport BrowserLocalStorageService from \"./browserLocalStorage.service\";\nimport BrowserMemoryStorageService from \"./browserMemoryStorage.service\";\n\nconst keys = {\n  encKey: \"localEncryptionKey\",\n  sessionKey: \"session\",\n};\n\nexport class LocalBackedSessionStorageService\n  extends AbstractCachedStorageService\n  implements MemoryStorageServiceInterface\n{\n  private cache = new Map<string, unknown>();\n  private localStorage = new BrowserLocalStorageService();\n  private sessionStorage = new BrowserMemoryStorageService();\n\n  constructor(\n    private encryptService: AbstractEncryptService,\n    private keyGenerationService: AbstractKeyGenerationService\n  ) {\n    super();\n  }\n\n  async get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T> {\n    if (this.cache.has(key)) {\n      return this.cache.get(key) as T;\n    }\n\n    return await this.getBypassCache(key, options);\n  }\n\n  async getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T> {\n    const session = await this.getLocalSession(await this.getSessionEncKey());\n    if (session == null || !Object.keys(session).includes(key)) {\n      return null;\n    }\n\n    let value = session[key];\n    if (options?.deserializer != null) {\n      value = options.deserializer(value as Jsonify<T>);\n    }\n\n    this.cache.set(key, value);\n    return this.cache.get(key) as T;\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save<T>(key: string, obj: T): Promise<void> {\n    if (obj == null) {\n      this.cache.delete(key);\n    } else {\n      this.cache.set(key, obj);\n    }\n\n    const sessionEncKey = await this.getSessionEncKey();\n    const localSession = (await this.getLocalSession(sessionEncKey)) ?? {};\n    localSession[key] = obj;\n    await this.setLocalSession(localSession, sessionEncKey);\n  }\n\n  async remove(key: string): Promise<void> {\n    await this.save(key, null);\n  }\n\n  async getLocalSession(encKey: SymmetricCryptoKey): Promise<Record<string, unknown>> {\n    const local = await this.localStorage.get<string>(keys.sessionKey);\n\n    if (local == null) {\n      return null;\n    }\n\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      return local as any as Record<string, unknown>;\n    }\n\n    const sessionJson = await this.encryptService.decryptToUtf8(new EncString(local), encKey);\n    if (sessionJson == null) {\n      // Error with decryption -- session is lost, delete state and key and start over\n      await this.setSessionEncKey(null);\n      await this.localStorage.remove(keys.sessionKey);\n      return null;\n    }\n    return JSON.parse(sessionJson);\n  }\n\n  async setLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      await this.setDecryptedLocalSession(session);\n    } else {\n      await this.setEncryptedLocalSession(session, key);\n    }\n  }\n\n  @devFlag(\"storeSessionDecrypted\")\n  async setDecryptedLocalSession(session: Record<string, unknown>): Promise<void> {\n    // Make sure we're storing the jsonified version of the session\n    const jsonSession = JSON.parse(JSON.stringify(session));\n    if (session == null) {\n      await this.localStorage.remove(keys.sessionKey);\n    } else {\n      await this.localStorage.save(keys.sessionKey, jsonSession);\n    }\n  }\n\n  async setEncryptedLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    const jsonSession = JSON.stringify(session);\n    const encSession = await this.encryptService.encrypt(jsonSession, key);\n\n    if (encSession == null) {\n      return await this.localStorage.remove(keys.sessionKey);\n    }\n    await this.localStorage.save(keys.sessionKey, encSession.encryptedString);\n  }\n\n  async getSessionEncKey(): Promise<SymmetricCryptoKey> {\n    let storedKey = await this.sessionStorage.get<SymmetricCryptoKey>(keys.encKey);\n    if (storedKey == null || Object.keys(storedKey).length == 0) {\n      storedKey = await this.keyGenerationService.makeEphemeralKey();\n      await this.setSessionEncKey(storedKey);\n    }\n    return SymmetricCryptoKey.fromJSON(storedKey);\n  }\n\n  async setSessionEncKey(input: SymmetricCryptoKey): Promise<void> {\n    if (input == null) {\n      await this.sessionStorage.remove(keys.encKey);\n    } else {\n      await this.sessionStorage.save(keys.encKey, input);\n    }\n  }\n}\n","import { devFlagEnabled, DevFlags } from \"../flags\";\n\nexport function devFlag(flag: keyof DevFlags) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args: any[]) {\n      if (!devFlagEnabled(flag)) {\n        throw new Error(\n          `This method should not be called, it is protected by a disabled dev flag.`\n        );\n      }\n      return originalMethod.apply(this, args);\n    };\n  };\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { SafariApp } from \"../../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n      }\n    );\n\n    if (chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    if (typeof info.menuItemId !== \"string\") {\n      return;\n    }\n\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock();\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      const msg: any = message;\n      if (message.message instanceof EncString) {\n        // Alternative, backwards-compatible serialization of EncString\n        msg.message = {\n          encryptedString: message.message.encryptedString,\n          encryptionType: message.message.encryptionType,\n          data: message.message.data,\n          iv: message.message.iv,\n          mac: message.message.mac,\n        };\n      }\n      this.port.postMessage(msg);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await firstValueFrom(this.folderService.folderViews$);\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await firstValueFrom(this.folderService.folderViews$);\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { SystemService } from \"@bitwarden/common/abstractions/system.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserEnvironmentService } from \"src/services/browser-environment.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: BrowserEnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(msg.tab), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage(tabToAutoFill: chrome.tabs.Tab) {\n    const totpCode = await this.autofillService.doAutoFill({\n      tab: tabToAutoFill,\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n\n          if (await this.environmentService.hasManagedEnvironment()) {\n            await this.environmentService.setUrlsToManagedEnvironment();\n          }\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    const manifest = chrome.runtime.getManifest();\n    if (manifest.manifest_version === 2) {\n      this.webRequest = (window as any).chrome.webRequest;\n    }\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SystemService as SystemServiceAbstraction } from \"@bitwarden/common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SystemService } from \"@bitwarden/common/services/system.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserEnvironmentService } from \"../services/browser-environment.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserLocalStorageService from \"../services/browserLocalStorage.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport { FolderService } from \"../services/folders/folder.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { KeyGenerationService } from \"../services/keyGeneration.service\";\nimport { LocalBackedSessionStorageService } from \"../services/localBackedSessionStorage.service\";\nimport { StateService } from \"../services/state.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: AbstractStorageService;\n  secureStorageService: AbstractStorageService;\n  memoryStorageService: AbstractStorageService;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: BrowserEnvironmentService;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: InternalFolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  vaultTimeoutSettingsService: VaultTimeoutSettingsServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: InternalPolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n  encryptService: EncryptService;\n  folderApiService: FolderApiServiceAbstraction;\n  policyApiService: PolicyApiServiceAbstraction;\n  userVerificationApiService: UserVerificationApiServiceAbstraction;\n\n  // Passed to the popup for Safari to workaround issues with theming, downloading, etc.\n  backgroundWindow = window;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.setIcon();\n      await this.refreshBadgeAndMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.systemService.startProcessReload(this.authService);\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.logService = new ConsoleLogService(false);\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.storageService = new BrowserLocalStorageService();\n    this.secureStorageService = new BrowserLocalStorageService();\n    this.memoryStorageService =\n      chrome.runtime.getManifest().manifest_version == 3\n        ? new LocalBackedSessionStorageService(\n            new EncryptService(this.cryptoFunctionService, this.logService, false),\n            new KeyGenerationService(this.cryptoFunctionService)\n          )\n        : new MemoryStorageService();\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.memoryStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.encryptService = new EncryptService(this.cryptoFunctionService, this.logService, true);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.encryptService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new BrowserEnvironmentService(this.stateService, this.logService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.folderApiService = new FolderApiService(this.folderService, this.apiService);\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(this.stateService, this.organizationService);\n    this.policyApiService = new PolicyApiService(\n      this.policyService,\n      this.apiService,\n      this.stateService,\n      this.organizationService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutSettingsService = new VaultTimeoutSettingsService(\n      this.cryptoService,\n      this.tokenService,\n      this.policyService,\n      this.stateService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      this.vaultTimeoutSettingsService,\n      lockedCallback,\n      logoutCallback\n    );\n\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      this.folderApiService,\n      logoutCallback\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(this.cryptoFunctionService, this.logService);\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService, this.encryptService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationApiService = new UserVerificationApiService(this.apiService);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.userVerificationApiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToGlobal(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    let suffix = \"\";\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      suffix = \"_gray\";\n    } else if (authStatus === AuthenticationStatus.Locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutSettingsService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.systemService.startProcessReload(this.authService);\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\n@Injectable()\nexport class BrowserFileDownloadService implements FileDownloadService {\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    if (BrowserApi.isSafariApi) {\n      let data: BlobPart = null;\n      if (builder.blobOptions.type === \"text/plain\" && typeof request.blobData === \"string\") {\n        data = request.blobData;\n      } else {\n        data = Utils.fromBufferToB64(request.blobData as ArrayBuffer);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: request.blobOptions,\n          fileName: request.fileName,\n        }),\n        true\n      );\n    } else {\n      if ((navigator as any).msSaveOrOpenBlob) {\n        (navigator as any).msSaveBlob(builder.blob, request.fileName);\n      } else {\n        const a = window.document.createElement(\"a\");\n        a.href = URL.createObjectURL(builder.blob);\n        a.download = request.fileName;\n        window.document.body.appendChild(a);\n        a.click();\n        window.document.body.removeChild(a);\n      }\n    }\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      await this.themingService.monitorThemeChanges();\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\nimport { MEMORY_STORAGE, SECURE_STORAGE } from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\nimport { BrowserFileDownloadService } from \"../../services/browserFileDownloadService\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    {\n      provide: FolderService,\n      useFactory: getBgService<FolderService>(\"folderService\"),\n      deps: [],\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useFactory: getBgService<FolderApiServiceAbstraction>(\"folderApiService\"),\n      deps: [],\n    },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: BrowserEnvironmentService,\n      useExisting: EnvironmentService,\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    {\n      provide: PolicyService,\n      useFactory: getBgService<PolicyService>(\"policyService\"),\n      deps: [],\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useFactory: getBgService<PolicyApiServiceAbstraction>(\"policyApiService\"),\n      deps: [],\n    },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: AbstractStorageService,\n      useFactory: getBgService<AbstractStorageService>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutSettingsService,\n      useFactory: getBgService<VaultTimeoutSettingsService>(\"vaultTimeoutSettingsService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"memoryStorageService\"),\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n    {\n      provide: FileDownloadService,\n      useClass: BrowserFileDownloadService,\n    },\n    {\n      provide: AbstractThemingService,\n      useFactory: () => {\n        return new ThemingService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          // Safari doesn't properly handle the (prefers-color-scheme) media query in the popup window, it always returns light.\n          // In Safari we have to use the background page instead, which comes with limitations like not dynamically changing the extension theme when the system theme is changed.\n          getBgService<PlatformUtilsService>(\"platformUtilsService\")().isSafari()\n            ? getBgService<Window>(\"backgroundWindow\")()\n            : window,\n          document\n        );\n      },\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"@bitwarden/angular/components/toastr.component\";\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { AboutComponent } from \"./settings/about.component\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    LayoutModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n    AboutComponent,\n  ],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(35192)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","remove","BitwardenToast","constructor","toastrService","toastPackage","super","opacity","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","useValue","default","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Mir","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","id","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","EnvironmentUrls","events","keyConnector","obj","Object","assign","stateService","urlsSubject","Subject","scimUrl","activeAccount$","pipe","concatMap","setUrlsFromStorage","subscribe","hasBaseUrl","getNotificationsUrl","getWebVaultUrl","getSendUrl","getIconsUrl","getApiUrl","getIdentityUrl","getEventsUrl","eventsUrl","getKeyConnectorUrl","keyConnectorUrl","getScimUrl","getEnvironmentUrls","envUrls","formatUrl","scim","setEnvironmentUrls","next","replace","startsWith","isCloud","EncryptionType","BrowserEnvironmentService","logService","hasManagedEnvironment","getManagedEnvironment","e","error","settingsHaveChanged","env","Promise","resolve","reject","chrome","storage","managed","get","result","runtime","lastError","environment","setUrlsToManagedEnvironment","BoxRowDirective","elRef","el","nativeElement","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","onClick","event","target","contains","tagName","inputEl","type","click","focus","nodeURL","window","Utils","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","self","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","Error","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","getUrl","hostname","host","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","keys","k","Number","isNaN","s","charAt","toUpperCase","bgColor","threshold","svgTextFill","bgColorHexNums","substring","hash","color","bitwardenContainerService","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","EncString","encryptedStringOrType","data","iv","mac","initFromData","initFromEncryptedString","ivBytes","macBytes","dataBytes","toJSON","encryptedString","encType","encryptionType","encPieces","parseEncryptedString","AesCbc128_HmacSha256_B64","AesCbc256_HmacSha256_B64","AesCbc256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","headerPieces","decrypt","orgId","key","decryptedValue","getKeyForDecryption","encryptService","getContainerService","getEncryptService","decryptToUtf8","cryptoService","getCryptoService","getOrgKey","getKeyForUserEncryption","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","p","then","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","title","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","StopClickDirective","$event","preventDefault","resetEnvironment","EnvironmentComponent","showEditedManagedSettings","navigate","PasswordHintRequest","ApiService","LogService","ValidationService","showError","defaultErrorMessage","errors","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","getSingleMessage","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","take","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HomeComponent","passwordGenerationService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","state","generatePassword","codeVerifier","codeVerifierHash","codeChallenge","setSsoCodeVerifier","setSsoState","redirectUri","launchUri","HashPurpose","KeySuffixOptions","SecretVerificationRequest","CryptoService","VaultTimeoutService","VaultTimeoutSettingsService","vaultTimeoutService","vaultTimeoutSettingsService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","destroy$","load","takeUntil","ngOnDestroy","complete","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","doUnlockWithPin","failed","kdf","getKdfType","kdfIterations","getKdfIterations","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","doUnlockWithMasterPassword","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","setKey","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","BiometricErrors","startDesktop","description","desktopIntegrationDisabled","A11yTitleDirective","appA11yTitle","BrowserApi","tabsQueryFirst","active","windowId","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","command","tabSendMessage","sendMessage","browser","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","subscriber","arg","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","getPlatformInfo","isSafariApi","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","PrivateModeWarningComponent","popupUtilsService","showWarning","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","code","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","JSON","stringify","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","FormValidationErrorsService","formBuilder","formValidationErrorService","selfHosted","formGroup","group","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","isSelfHost","selfHostedDomain","value","getRememberedEmail","setValue","markAllAsTouched","invalid","errorText","getErrorToastMessage","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","getFormValidationErrors","controls","shift","errorName","errorTag","controlName","focusInput","SyncService","LoginComponent","syncService","fullSync","settings","InputsFieldMatch","matchTo","errorMessage","control","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","captchaBypassToken","registerResponse","registerAccount","buildRegisterRequest","successful","getStrengthResult","passwordStrengthResult","getPasswordScoreText","text","required","validateRegistration","hasError","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","loginResponse","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","password","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScore","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","clearTimeout","strengthResult","passwordStrength","getPasswordStrengthUserInput","userInput","atPosition","RegisterComponent","OrganizationApiServiceAbstraction","organizationApiService","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","PolicyApiServiceAbstraction","policyApiService","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenRequestTwoFactor","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","AppIdService","appIdService","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","deviceIdentifier","getAppId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","anotherMethod","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","body","unsubscribe","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","copyToClipboard","select","toggleOptions","number","checked","normalizeOptions","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","expand","PopOutComponent","show","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileName","fileSize","SendTextView","hidden","maskedText","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","Date","pendingDelete","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","Text","sendLinkBaseUrl","link","isDateTimeLocalSupported","editMode","sendId","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","getTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","useExisting","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","selectSend","copySendLink","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","addSend","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","lastNavigationSuccessId","navigationTrigger","toggleUriInput","removeUri","ExcludedDomainsComponent","excludedDomains","existingExcludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","splice","newExcludedDomains","getNewlyAddedDomians","validDomain","setNeverDomains","trackByFunction","index","item","newDomain","some","oldDomain","uriSet","Set","currentUris","EncryptedExportType","EventType","ExportService","EventService","UserVerificationService","FileDownloadService","exportService","eventService","userVerificationService","fileDownloadService","exportForm","format","secret","filePassword","confirmFilePassword","fileEncryptionType","AccountEncrypted","formatOptions","checkExportDisabled","merge","startWith","adjustValidators","DisablePersonalVaultExport","disable","encryptedFormat","doExport","getExportData","downloadFile","collectEvent","clearValidators","warningDialog","verifyUser","FileEncrypted","getPasswordProtectedExport","getExport","getFileName","prefix","collect","User_ClientExportedVault","toggleFilePassword","showFilePassword","toggleConfirmFilePassword","showConfirmFilePassword","reset","enable","csv","download","blobData","blobOptions","OrganizationService","VerificationType","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","requestOTP","disableRequestOTP","sentCode","processChanges","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","OTP","MasterPassword","multi","UserVerificationComponent","ExportComponent","FolderView","FolderService","FolderApiServiceAbstraction","folderService","folderApiService","onSavedFolder","onDeletedFolder","folder","save","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","folderSelected","FoldersComponent","folders$","folderViews$","folders","addFolder","TotpService","AbstractThemingService","saveClearClipboard","saveDefaultUriMatch","updateAutoTotpCopy","updateAddLoginNotification","updateChangedPasswordNotification","updateContextMenuItem","updateShowCardsCurrentTab","updateShowIdentitiesCurrentTab","updateFavicon","updateBadgeCounter","saveTheme","updateAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","OptionsComponent","totpService","themingService","enableFavicon","enableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","enableAutoTotpCopy","enableContextMenuItem","enableAddLoginNotification","enableChangedPasswordNotification","showCardsCurrentTab","showIdentitiesCurrentTab","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","getDisableAutoTotpCopy","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","setDisableAddLoginNotification","setDisableChangedPasswordNotification","setDisableContextMenuItem","setDisableAutoTotpCopy","setEnableAutoFillOnPageLoad","setAutoFillOnPageLoadDefault","setDisableBadgeCounter","setDontShowCardsCurrentTab","setDontShowIdentitiesCurrentTab","updateConfiguredTheme","setDefaultUriMatch","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","goBack","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","shown","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","replaceTopModal","allowMultipleModals","registerComponentFactoryResolver","closeAll","modal","attachToDom","createModalComponent","attachView","domElem","rootNodes","appendChild","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","style","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","ConfigServiceAbstraction","AboutComponent","configService","year","getFullYear","getApplicationVersion","serverConfig$","form","vaultTimeout","custom","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","floor","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","updateBiometric","updateAutoBiometricsPrompt","changePassword","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","enableAutoBiometricsPrompt","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","granted","requestPermission","console","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","setBiometricFingerprintValidated","setDisableAutoBiometricsPrompt","lock","createNewTab","twoStep","share","import","export","help","about","fingerprint","getFingerprint","innerText","div","html","confirmButtonText","rate","deviceType","getDevice","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","arrayBuffer","AttachmentView","fromJSON","FieldView","newField","showValue","showCount","linkedId","maskedValue","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","CanLaunchWhitelist","LoginUriView","u","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","isWebsite","canLaunch","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","maskedPassword","hasTotp","PasswordHistoryView","ph","lastUsedDate","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","view","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","setProperty","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","EncArrayBuffer","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","b64","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","encBuf","fromResponse","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","VaultFilter","selectedCollection","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","buildFilter","cipherPassesFilter","TreeNode","node","children","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","nestedTraverse","newPartName","getTreeNodeObject","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","buildNestedFolders","transformation","storedFolders","orgCiphers","oc","nestedFolders","getAllFoldersNested","nestedList","mergeMap","buildCollections","storedCollections","nestedCollections","getAllNested","checkForSingleOrganizationPolicy","SingleOrg","checkForPersonalOwnershipPolicy","nodes","folderCopy","getFolderNested","firstValueFrom","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","launchCipher","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","CipherRowComponent","viewCipher","EllipsisPipe","limit","completeWords","ellipsis","selectMyVault","selectOrganization","selectAllVaults","openOverlay","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","isOpen","vaultFilterDisplay","enforcePersonalOwnwership","overlayPostition","originX","originY","overlayX","overlayY","organizations","handleKeyboardEvent","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","position","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","templateRef","attach","outsidePointerEvents","backdropClick","detachments","dispose","changeVaultSelection","selectFolder","selectCollection","CiphersComponent","searchTypeSearch","showOrganizations","noneFolder","showVaultFilter","preventSelected","getBrowserCipherComponentState","folderNode","collectionNode","getNested","setBrowserCipherComponentState","selectedTimeout","updateLastLaunchedDate","showGroupings","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","fillCipher","CurrentTabComponent","autofillService","pageDetails","isLoading","frameId","webExtSender","details","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","dontShowCards","dontShowIdentities","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","onSharedCipher","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","selectTrash","VaultFilterComponent","browserStateService","folderCounts","collectionCounts","deletedCount","selectedOrganization","showCollections","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","noFolderCiphers","folderCount","getBrowserGroupingComponentState","replaceState","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","vaultFilterChanged","favoriteCiphers","colId","setBrowserGroupingComponentState","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","showPremiumRequiredTotp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","fillCipherAndSave","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","useClass","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","AppComponent","sanitizer","lastActivity","clearComponentStates","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","forceWindowReload","isOpera","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","getIsAuthenticated","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","StateVersion","ThemingService","_theme","BehaviorSubject","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","setTheme","matchMedia","fromEvent","AbstractEncryptService","AccountApiService","ConfigApiServiceAbstraction","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","AbstractStorageService","AbstractCachedStorageService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","ServerConfigData","serverConfigResponse","gitHash","server","ThirdPartyServerConfigData","utcDate","EnvironmentServerConfigData","vault","EncryptionPair","encrypted","decrypted","ArrayBuffer","fromBufferToByteString","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","cryptoMasterKey","initRecordEncryptionPairsFromJSON","decObj","fromByteStringToArray","record","AccountProfile","environmentUrls","pinProtected","serverConfig","AccountTokens","profile","tokens","json","WindowState","GlobalState","stateVersion","One","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","date","createHubConnection","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","on","ProcessNotification","stopHubConnection","notification","authResponsePushNotifiction","DeviceRequest","appId","getDeviceString","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","accessCode","passwordlessAuthRequest","toIdentityToken","scope","client_id","deviceName","authRequest","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","creationDate","requestApproved","RegisterResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useKeyConnector","useScim","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","businessName","billingEmail","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","FolderResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","postAuthRequest","getAuthResponse","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getFullCipherDetails","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","requiresCaptcha","LogInStrategy","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","PasswordlessLogInStrategy","localPasswordHash","decKey","authRequestId","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","pushNotificationSubject","logInStrategy","strategy","clearState","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","getPushNotifcationObs$","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","Attachment","decryptAttachmentKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","settings$","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","collectionCopy","setEncryptedCollections","ServerConfigResponse","ThirdPartyServerConfigResponse","EnvironmentServerConfigResponse","ServerConfig","serverConfigData","getAgeInMilliseconds","expiresSoon","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","EEFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","rsaDecrypt","toData","providerKey","getProviderKey","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","plainValue","encValue","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","keyForEnc","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EncryptService","logMacFailures","plainBuf","encObj","aesEncrypt","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","hmac","aesDecrypt","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","req","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getEncryptedExport","getDecryptedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","collectionsMap","orgKey","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderApiService","postFolder","putFolder","deleteFolder","OrganizationUserType","_folders","_folderViews","activeAccountUnlocked$","unlocked","getEncryptedFolders","updateObservables","getAllDecryptedFromState","decryptFolders","setEncryptedFolders","updates","cId","decryptFolderPromises","decryptedFolders","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","PolicyApiService","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getPolicyForOrganization","policyType","policy","mapPoliciesFromToken","putPolicy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","setDecryptedPolicies","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","setEncryptedPolicies","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","sendsMatched","lowPriorityMatched","joined","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","StorageLocation","_settings","getSettings","setEquivalentDomains","setSettings","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","buildAccountMapFromJSON","jsonAccounts","partialKeys","DDG_SHARED_KEY","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricText","biometricUnlock","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","setHasPremiumFromOrganization","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","recordToMap","mapToRecord","disableAddLoginNotification","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","fromEntries","entries","withPrototype","converter","originalResult","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setClientId","setClientSecret","clearToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","providerService","_sync","sync$","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","eqDomains","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","UserVerificationApiService","postAccountVerifyOTP","postAccountRequestOTP","VerifyOTPRequest","userVerificationApiService","buildRequest","verification","requestClass","alreadyHashed","validateInput","AnonAddyForwarder","generate","anonaddy","redirect","DuckDuckGoForwarder","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","methodResponses","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","vaultTimeoutSeconds","currentAction","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","decipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","buf","subscribers","messageCallback","JslibServicesModule","useFactory","deps","language","deleteAccount","accountApiService","verificationRequest","controlErrors","keyError","getBilling","getSubscription","getLicense","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","reinstate","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","updateKeys","getSso","updateSso","configApiService","_serverConfig","switchMap","E","buildServerConfig","fetchServerConfig","ContainerService","attachToGlobal","MemoryStorageService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","executeProcessReload","inactiveMoreThanSeconds","seconds","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","SafariApp","resolveNow","messageId","MAX_SAFE_INTEGER","sendNativeMessage","responseData","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillOnTab","fromCommand","lastLaunchedCipher","doAutoFillActiveTab","getActiveTab","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","BrowserCryptoService","ClientType","AbstractChromeStorageService","chromeStorageApi","keyedObj","BrowserLocalStorageService","local","BrowserMessagingService","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","opr","addons","Browser","isEdge","isVivaldi","isIE","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","sendMessageToApp","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","removeChild","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","getFromSessionMemory","getBypassCache","setInSessionMemory","SessionSyncer","behaviorSubject","metaData","ignoreNextUpdate","ctor","initializer","manifest_version","observe","listenForUpdates","updateSession","updateMessageCommand","updateFromMessage","itemBuilder","initializeAsArray","keyValuePair","sessionKey","sessionSync","buildOptions","__syncedItemMetadata","__sessionSyncers","buildSyncer","syncer","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","KeyGenerationService","makeEphemeralKey","numBytes","BrowserMemoryStorageService","session","LocalBackedSessionStorageService","keyGenerationService","localStorage","sessionStorage","getLocalSession","getSessionEncKey","sessionEncKey","localSession","setLocalSession","sessionJson","setSessionEncKey","setEncryptedLocalSession","setDecryptedLocalSession","jsonSession","encSession","storedKey","checkSafari","CommandsBackground","main","processCommand","commandToRetry","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","tabToAutoFill","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","backgroundWindow","menuOptionsLoaded","nativeMessagingBackground","that","backgroundMessagingService","containerService","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","setBadgeText","setTitle","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","BrowserFileDownloadService","msSaveOrOpenBlob","msSaveBlob","createObjectURL","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","initService","AppModule","positionClass","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}